/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


/{
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "Base";
                        bindings = <

   &trans  &kp Q   &kp W    &kp E     &kp R  &kp T       &kp Z    &kp U  &kp I      &kp O    &kp P     &trans
   &trans  &kp A   &kp S    &kp D     &kp F  &kp G       &kp H    &kp J  &kp K      &kp L    &kp SEMI  &trans
   &trans  &kp Y   &kp X    &kp C     &kp V  &kp B       &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &trans         
                            &kp LGUI  &mo 1  &kp SPACE   &kp RET  &mo 2  &kp RALT

                        >;
                };
                lower_layer {
                        label = "Lower";
                        bindings = <

   &trans  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5             &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &trans
   &trans  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR         &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
   &trans  &trans       &trans       &trans       &trans       &trans             &trans    &trans    &trans    &trans     &trans  &trans
                                     &kp LGUI     &trans       &kp SPACE          &kp RET   &trans    &kp RALT

                        >;
                };

                raise_layer {
                        label = "Raise";
                        bindings = <

   &trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
   &trans  &trans    &trans  &trans    &trans    &trans      &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &trans
   &trans  &trans    &trans  &trans    &trans    &trans      &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &trans
                    	     &kp LGUI  &trans    &kp SPACE   &kp RET    &trans     &kp RALT

                        >;
                };
        };
};


// New
// 
// #include <behaviors.dtsi>
// #include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/bt.h>
// 
// /{
//   keymap {
//     compatible = "zmk,keymap";
// 
//     Base_layer {
//       bindings = <
//         &trans   &kp Q            &kp W    &kp E              &kp R       &kp T                  &kp Z        &kp U       &kp I          &kp O             &kp P              &trans
//         &trans   &kp A            &kp S    &kp D              &kp F       &kp G                  &kp H        &kp J       &kp K          &kp L             &kp LOCKING_CAPS   &trans
//         &trans   &kp LEFT_SHIFT   &kp X    &kp C              &kp V       &kp B                  &kp N        &kp M       &kp Y          &kp LOCKING_NUM   &kp LOCKING_NUM    &trans
//                                            &kp LEFT_CONTROL   &mo LOWER   &kp SPACE              &kp RETURN   &mo RAISE   &kp undefined 
//       >;
//     };
// 
//     Lower_layer {
//       bindings = <
//         &trans   &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3   &kp NUMBER_4   &kp NUMBER_5             &kp NUMBER_6     &kp NUMBER_7     &kp NUMBER_8   &kp NUMBER_9      &kp NUMBER_0   &trans
//         &trans   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 5             &kp LEFT_ARROW   &kp DOWN_ARROW   &kp UP_ARROW   &kp RIGHT_ARROW   &trans         &trans
//         &trans   &bt BT_CLR     &trans         &trans         &trans         &trans                   &trans           &trans           &trans         &trans            &trans         &trans
//                                                &kp LEFT_GUI   &trans         &kp RETURN               &kp SPACE        &trans           &kp RIGHT_ALT 
//       >;
//     };
// 
//     Raise_layer {
//       bindings = <
//         &trans   &kp EXCLAMATION   &kp AT_SIGN   &kp HASH       &kp DOLLAR   &kp PERCENT                  &kp CARET        &kp AMPERSAND   &kp ASTERISK       &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS   &trans 
//         &trans   &trans            &trans        &trans         &trans       &kp COMMA                    &kp MINUS        &kp EQUAL       &kp LEFT_BRACKET   &kp RIGHT_BRACKET      &kp BACKSLASH   &trans 
//         &trans   &trans            &trans        &trans         &trans       &kp SEMICOLON                &kp UNDERSCORE   &kp PLUS        &kp LEFT_BRACE     &kp RIGHT_BRACE        &kp PIPE   &trans 
//                                                  &kp LEFT_GUI   &trans       &kp SPACE                    &kp RETURN       &trans          &kp RIGHT_ALT 
//       >;
//     };
// 
//   };
// };
